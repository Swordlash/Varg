import "Std.List"

class String deriving List Char where
    Empty
    Cons has
        head : Char
        tail : String

    function (:) (ch:Char) : String = String.Cons ch this # we must shadow (:) from List to avoid implicit cast on List

    function null : Bool = this == String.Empty
    function empty : String = ""

    static function unwords (words : List String) : String = if words.null then "" else words.head ++ " " ++ String.unwords (words.tail)
