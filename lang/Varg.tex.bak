\batchmode
%This Latex file is machine-generated by the BNF-converter

\documentclass[a4paper,11pt]{article}
\author{BNF-converter}
\title{The Language Varg}
\setlength{\parindent}{0mm}
\setlength{\parskip}{1mm}
\begin{document}

\maketitle

\newcommand{\emptyP}{\mbox{$\epsilon$}}
\newcommand{\terminal}[1]{\mbox{{\texttt {#1}}}}
\newcommand{\nonterminal}[1]{\mbox{$\langle \mbox{{\sl #1 }} \! \rangle$}}
\newcommand{\arrow}{\mbox{::=}}
\newcommand{\delimit}{\mbox{$|$}}
\newcommand{\reserved}[1]{\mbox{{\texttt {#1}}}}
\newcommand{\literal}[1]{\mbox{{\texttt {#1}}}}
\newcommand{\symb}[1]{\mbox{{\texttt {#1}}}}

This document was automatically generated by the {\em BNF-Converter}. It was generated together with the lexer, the parser, and the abstract syntax module, which guarantees that the document matches with the implementation of the language (provided no hand-hacking has taken place).

\section*{The lexical structure of Varg}

\subsection*{Literals}









UIdent literals are recognized by the regular expression
\({\nonterminal{upper}} ({\nonterminal{letter}} \mid {\nonterminal{digit}})*\)

LIdent literals are recognized by the regular expression
\({\nonterminal{lower}} ({\nonterminal{letter}} \mid {\nonterminal{digit}})*\)

MFun literals are recognized by the regular expression
\(\mbox{`.'} ({\nonterminal{letter}} \mid {\nonterminal{digit}})*\)

Op literals are recognized by the regular expression
\((\mbox{`!'} \mid \mbox{`\#'} \mid \mbox{`\$'} \mid \mbox{`\%'} \mid \mbox{`\&'} \mid \mbox{`*'} \mid \mbox{`{$+$}'} \mid \mbox{`.'} \mid \mbox{`/'} \mid \mbox{`{$<$}'} \mid \mbox{`{$=$}'} \mid \mbox{`{$>$}'} \mid \mbox{`?'} \mid \mbox{`@'} \mid \mbox{`$\backslash$'} \mid \mbox{`{\textasciicircum}'} \mid \mbox{`{$|$}'} \mid \mbox{`{$-$}'} \mid \mbox{`\~{}'})+\)


\subsection*{Reserved words and symbols}
The set of reserved words is the set of terminals appearing in the grammar. Those reserved words that consist of non-letter characters are called symbols, and they are treated in a different way from those that are similar to identifiers. The lexer follows rules familiar from languages like Haskell, C, and Java, including longest match and spacing conventions.

The reserved words used in Varg are the following: \\

\begin{tabular}{lll}
{\reserved{abstract}} &{\reserved{class}} &{\reserved{deriving}} \\
{\reserved{else}} &{\reserved{false}} &{\reserved{final}} \\
{\reserved{function}} &{\reserved{has}} &{\reserved{if}} \\
{\reserved{implement}} &{\reserved{implementing}} &{\reserved{import}} \\
{\reserved{in}} &{\reserved{interface}} &{\reserved{internal}} \\
{\reserved{let}} &{\reserved{match}} &{\reserved{mod}} \\
{\reserved{module}} &{\reserved{native}} &{\reserved{not}} \\
{\reserved{sealed}} &{\reserved{static}} &{\reserved{struct}} \\
{\reserved{super}} &{\reserved{template}} &{\reserved{then}} \\
{\reserved{this}} &{\reserved{true}} &{\reserved{unify}} \\
{\reserved{unique}} &{\reserved{where}} &{\reserved{with}} \\
\end{tabular}\\

The symbols used in Varg are the following: \\

\begin{tabular}{lll}
{\symb{?}} &{\symb{[}} &{\symb{]}} \\
{\symb{(}} &{\symb{)}} &{\symb{,}} \\
{\symb{:}} &{\symb{\{}} &{\symb{\}}} \\
{\symb{;}} &{\symb{{$=$}}} &{\symb{{$+$}}} \\
{\symb{{$-$}}} &{\symb{*}} &{\symb{/}} \\
{\symb{{\textasciicircum}}} &{\symb{{$<$}}} &{\symb{{$>$}}} \\
{\symb{{$<$}{$=$}}} &{\symb{{$>$}{$=$}}} &{\symb{{$=$}{$=$}}} \\
{\symb{{$-$}{$>$}}} &{\symb{$\backslash$}} &{\symb{[]}} \\
{\symb{..}} &{\symb{/{$=$}}} &{\symb{{$|$}{$|$}}} \\
{\symb{\&\&}} &{\symb{'}} &{\symb{\_}} \\
\end{tabular}\\

\subsection*{Comments}
Single-line comments begin with {\symb{\#}}. \\Multiple-line comments are  enclosed with {\symb{\#\{}} and {\symb{\}\#}}.

\section*{The syntactic structure of Varg}
Non-terminals are enclosed between $\langle$ and $\rangle$. 
The symbols  {\arrow}  (production),  {\delimit}  (union) 
and {\emptyP} (empty rule) belong to the BNF notation. 
All other symbols are terminals.\\

\begin{tabular}{lll}
{\nonterminal{ProgramDef}} & {\arrow}  &{\nonterminal{ListImportDef}} {\nonterminal{ListClassDef}}  \\
\end{tabular}\\

\begin{tabular}{lll}
{\nonterminal{ListClassDef}} & {\arrow}  &{\emptyP} \\
 & {\delimit}  &{\nonterminal{ClassDef}} {\nonterminal{ListClassDef}}  \\
\end{tabular}\\

\begin{tabular}{lll}
{\nonterminal{ImportDef}} & {\arrow}  &{\terminal{import}} {\nonterminal{String}}  \\
\end{tabular}\\

\begin{tabular}{lll}
{\nonterminal{ListImportDef}} & {\arrow}  &{\emptyP} \\
 & {\delimit}  &{\nonterminal{ImportDef}} {\nonterminal{ListImportDef}}  \\
\end{tabular}\\

\begin{tabular}{lll}
{\nonterminal{ListConstrTypeParam}} & {\arrow}  &{\emptyP} \\
 & {\delimit}  &{\nonterminal{ConstrTypeParam}} {\nonterminal{ListConstrTypeParam}}  \\
\end{tabular}\\

\begin{tabular}{lll}
{\nonterminal{ConstrTypeParam}} & {\arrow}  &{\nonterminal{LIdent}}  \\
 & {\delimit}  &{\nonterminal{UIdent}}  \\
 & {\delimit}  &{\terminal{?}}  \\
 & {\delimit}  &{\terminal{[}} {\nonterminal{LIdent}} {\terminal{super}} {\nonterminal{ListTypeDef}} {\terminal{]}}  \\
 & {\delimit}  &{\terminal{[}} {\terminal{?}} {\terminal{super}} {\nonterminal{ListTypeDef}} {\terminal{]}}  \\
 & {\delimit}  &{\terminal{[}} {\nonterminal{LIdent}} {\terminal{deriving}} {\nonterminal{ListTypeDef}} {\terminal{]}}  \\
 & {\delimit}  &{\terminal{[}} {\terminal{?}} {\terminal{deriving}} {\nonterminal{ListTypeDef}} {\terminal{]}}  \\
\end{tabular}\\

\begin{tabular}{lll}
{\nonterminal{TypeDef}} & {\arrow}  &{\nonterminal{UIdent}} {\nonterminal{ListConstrTypeParam}}  \\
 & {\delimit}  &{\nonterminal{LIdent}} {\nonterminal{ListConstrTypeParam}}  \\
 & {\delimit}  &{\nonterminal{TypeDef1}}  \\
\end{tabular}\\

\begin{tabular}{lll}
{\nonterminal{TypeDef1}} & {\arrow}  &{\terminal{(}} {\nonterminal{TypeDef}} {\terminal{)}}  \\
\end{tabular}\\

\begin{tabular}{lll}
{\nonterminal{ListTypeDef}} & {\arrow}  &{\nonterminal{TypeDef}}  \\
 & {\delimit}  &{\nonterminal{TypeDef}} {\terminal{,}} {\nonterminal{ListTypeDef}}  \\
\end{tabular}\\

\begin{tabular}{lll}
{\nonterminal{PrimFreeType}} & {\arrow}  &{\terminal{(}} {\nonterminal{FreeTypeDef}} {\terminal{)}}  \\
 & {\delimit}  &{\nonterminal{LIdent}}  \\
 & {\delimit}  &{\nonterminal{UIdent}}  \\
\end{tabular}\\

\begin{tabular}{lll}
{\nonterminal{FreeTypeDef}} & {\arrow}  &{\nonterminal{UIdent}} {\nonterminal{ListPrimFreeType}}  \\
 & {\delimit}  &{\nonterminal{LIdent}} {\nonterminal{ListPrimFreeType}}  \\
 & {\delimit}  &{\nonterminal{FreeTypeDef1}}  \\
\end{tabular}\\

\begin{tabular}{lll}
{\nonterminal{FreeTypeDef1}} & {\arrow}  &{\terminal{(}} {\nonterminal{FreeTypeDef}} {\terminal{)}}  \\
\end{tabular}\\

\begin{tabular}{lll}
{\nonterminal{ListPrimFreeType}} & {\arrow}  &{\emptyP} \\
 & {\delimit}  &{\nonterminal{PrimFreeType}} {\nonterminal{ListPrimFreeType}}  \\
\end{tabular}\\

\begin{tabular}{lll}
{\nonterminal{ListArgDef}} & {\arrow}  &{\emptyP} \\
 & {\delimit}  &{\nonterminal{ArgDef}} {\nonterminal{ListArgDef}}  \\
\end{tabular}\\

\begin{tabular}{lll}
{\nonterminal{ArgDef}} & {\arrow}  &{\terminal{(}} {\nonterminal{LIdent}} {\terminal{:}} {\nonterminal{FreeTypeDef}} {\terminal{)}}  \\
 & {\delimit}  &{\nonterminal{LIdent}}  \\
\end{tabular}\\

\begin{tabular}{lll}
{\nonterminal{SuperclassType}} & {\arrow}  &{\nonterminal{FreeTypeDef}}  \\
\end{tabular}\\

\begin{tabular}{lll}
{\nonterminal{ListSuperclassType}} & {\arrow}  &{\nonterminal{SuperclassType}}  \\
 & {\delimit}  &{\nonterminal{SuperclassType}} {\terminal{,}} {\nonterminal{ListSuperclassType}}  \\
\end{tabular}\\

\begin{tabular}{lll}
{\nonterminal{ClassDef}} & {\arrow}  &{\nonterminal{ListClassModifier}} {\terminal{struct}} {\nonterminal{UIdent}} {\terminal{where}} {\terminal{\{}} {\nonterminal{ListClassField}} {\terminal{\}}}  \\
 & {\delimit}  &{\nonterminal{ListClassModifier}} {\terminal{class}} {\nonterminal{UIdent}} {\nonterminal{IsDeriving}} {\nonterminal{IsImplementing}} {\terminal{where}} {\terminal{\{}} {\nonterminal{ClassContents}} {\terminal{\}}}  \\
 & {\delimit}  &{\nonterminal{ListClassModifier}} {\terminal{template}} {\nonterminal{UIdent}} {\nonterminal{ListConstrTypeParam}} {\nonterminal{IsDeriving}} {\nonterminal{IsImplementing}} {\terminal{where}} {\terminal{\{}} {\nonterminal{ClassContents}} {\terminal{\}}}  \\
\end{tabular}\\

\begin{tabular}{lll}
{\nonterminal{IsImplementing}} & {\arrow}  &{\terminal{implementing}} {\nonterminal{ListSuperclassType}}  \\
 & {\delimit}  &{\emptyP} \\
\end{tabular}\\

\begin{tabular}{lll}
{\nonterminal{IsDeriving}} & {\arrow}  &{\terminal{deriving}} {\nonterminal{SuperclassType}}  \\
 & {\delimit}  &{\emptyP} \\
\end{tabular}\\

\begin{tabular}{lll}
{\nonterminal{ListClassModifier}} & {\arrow}  &{\emptyP} \\
 & {\delimit}  &{\nonterminal{ClassModifier}} {\nonterminal{ListClassModifier}}  \\
\end{tabular}\\

\begin{tabular}{lll}
{\nonterminal{ClassModifier}} & {\arrow}  &{\terminal{module}}  \\
 & {\delimit}  &{\terminal{interface}}  \\
 & {\delimit}  &{\terminal{sealed}}  \\
 & {\delimit}  &{\terminal{native}}  \\
\end{tabular}\\

\begin{tabular}{lll}
{\nonterminal{ClassContents}} & {\arrow}  &{\nonterminal{ListMemberDef}} {\nonterminal{ListFunDef}}  \\
\end{tabular}\\

\begin{tabular}{lll}
{\nonterminal{MemberDef}} & {\arrow}  &{\nonterminal{UIdent}}  \\
 & {\delimit}  &{\nonterminal{UIdent}} {\terminal{has}} {\terminal{\{}} {\nonterminal{ListClassField}} {\terminal{\}}}  \\
\end{tabular}\\

\begin{tabular}{lll}
{\nonterminal{ListMemberDef}} & {\arrow}  &{\emptyP} \\
 & {\delimit}  &{\nonterminal{MemberDef}}  \\
 & {\delimit}  &{\nonterminal{MemberDef}} {\terminal{;}} {\nonterminal{ListMemberDef}}  \\
\end{tabular}\\

\begin{tabular}{lll}
{\nonterminal{FunDef}} & {\arrow}  &{\nonterminal{ListFunctionModifier}} {\terminal{function}} {\nonterminal{FunctionName}} {\nonterminal{FunTemplateParams}} {\nonterminal{ListArgDef}} {\nonterminal{RetType}} {\terminal{{$=$}}} {\nonterminal{Expr}}  \\
 & {\delimit}  &{\nonterminal{ListFunctionModifier}} {\terminal{function}} {\nonterminal{FunctionName}} {\nonterminal{FunTemplateParams}} {\nonterminal{ListArgDef}} {\nonterminal{AbsRetType}}  \\
\end{tabular}\\

\begin{tabular}{lll}
{\nonterminal{RetType}} & {\arrow}  &{\terminal{:}} {\nonterminal{FreeTypeDef}}  \\
 & {\delimit}  &{\emptyP} \\
\end{tabular}\\

\begin{tabular}{lll}
{\nonterminal{FunctionName}} & {\arrow}  &{\nonterminal{LIdent}}  \\
 & {\delimit}  &{\terminal{(}} {\nonterminal{Operator}} {\terminal{)}}  \\
 & {\delimit}  &{\terminal{(}} {\nonterminal{Op}} {\terminal{)}}  \\
\end{tabular}\\

\begin{tabular}{lll}
{\nonterminal{Operator}} & {\arrow}  &{\terminal{{$+$}}}  \\
 & {\delimit}  &{\terminal{{$-$}}}  \\
 & {\delimit}  &{\terminal{*}}  \\
 & {\delimit}  &{\terminal{/}}  \\
 & {\delimit}  &{\terminal{{\textasciicircum}}}  \\
 & {\delimit}  &{\terminal{{$<$}}}  \\
 & {\delimit}  &{\terminal{{$>$}}}  \\
 & {\delimit}  &{\terminal{{$<$}{$=$}}}  \\
 & {\delimit}  &{\terminal{{$>$}{$=$}}}  \\
 & {\delimit}  &{\terminal{{$=$}{$=$}}}  \\
 & {\delimit}  &{\terminal{:}}  \\
\end{tabular}\\

\begin{tabular}{lll}
{\nonterminal{AbsRetType}} & {\arrow}  &{\terminal{:}} {\terminal{abstract}} {\nonterminal{FreeTypeDef}}  \\
 & {\delimit}  &{\emptyP} \\
\end{tabular}\\

\begin{tabular}{lll}
{\nonterminal{FunTemplateParams}} & {\arrow}  &{\emptyP} \\
 & {\delimit}  &{\terminal{{$<$}}} {\nonterminal{ListTemplateParam}} {\terminal{{$>$}}}  \\
\end{tabular}\\

\begin{tabular}{lll}
{\nonterminal{TemplateParam}} & {\arrow}  &{\nonterminal{ConstrTypeParam}}  \\
\end{tabular}\\

\begin{tabular}{lll}
{\nonterminal{ListTemplateParam}} & {\arrow}  &{\nonterminal{TemplateParam}}  \\
 & {\delimit}  &{\nonterminal{TemplateParam}} {\terminal{,}} {\nonterminal{ListTemplateParam}}  \\
\end{tabular}\\

\begin{tabular}{lll}
{\nonterminal{ListFunDef}} & {\arrow}  &{\emptyP} \\
 & {\delimit}  &{\nonterminal{FunDef}}  \\
 & {\delimit}  &{\nonterminal{FunDef}} {\terminal{;}} {\nonterminal{ListFunDef}}  \\
\end{tabular}\\

\begin{tabular}{lll}
{\nonterminal{ListFunctionModifier}} & {\arrow}  &{\emptyP} \\
 & {\delimit}  &{\nonterminal{FunctionModifier}} {\nonterminal{ListFunctionModifier}}  \\
\end{tabular}\\

\begin{tabular}{lll}
{\nonterminal{FunctionModifier}} & {\arrow}  &{\terminal{static}}  \\
 & {\delimit}  &{\terminal{internal}}  \\
 & {\delimit}  &{\terminal{implement}}  \\
 & {\delimit}  &{\terminal{final}}  \\
 & {\delimit}  &{\terminal{unique}}  \\
 & {\delimit}  &{\terminal{native}}  \\
\end{tabular}\\

\begin{tabular}{lll}
{\nonterminal{ClassField}} & {\arrow}  &{\nonterminal{FieldModifier}} {\nonterminal{LIdent}} {\terminal{:}} {\nonterminal{FreeTypeDef}}  \\
 & {\delimit}  &{\nonterminal{LIdent}} {\terminal{:}} {\nonterminal{FreeTypeDef}}  \\
\end{tabular}\\

\begin{tabular}{lll}
{\nonterminal{ListClassField}} & {\arrow}  &{\emptyP} \\
 & {\delimit}  &{\nonterminal{ClassField}}  \\
 & {\delimit}  &{\nonterminal{ClassField}} {\terminal{;}} {\nonterminal{ListClassField}}  \\
\end{tabular}\\

\begin{tabular}{lll}
{\nonterminal{FieldModifier}} & {\arrow}  &{\terminal{internal}}  \\
 & {\delimit}  &{\terminal{unique}}  \\
\end{tabular}\\

\begin{tabular}{lll}
{\nonterminal{Expr}} & {\arrow}  &{\terminal{let}} {\terminal{\{}} {\nonterminal{ListLetDef}} {\terminal{\}}} {\terminal{in}} {\nonterminal{Expr}}  \\
 & {\delimit}  &{\terminal{let}} {\nonterminal{LetDef}} {\terminal{in}} {\nonterminal{Expr}}  \\
 & {\delimit}  &{\terminal{match}} {\nonterminal{Expr}} {\terminal{with}} {\terminal{\{}} {\nonterminal{ListMatchClause}} {\terminal{\}}}  \\
 & {\delimit}  &{\terminal{if}} {\nonterminal{Expr}} {\terminal{then}} {\nonterminal{Expr}} {\terminal{else}} {\nonterminal{Expr}}  \\
 & {\delimit}  &{\terminal{unify}} {\nonterminal{Expr}} {\terminal{with}} {\nonterminal{Expr}} {\terminal{in}} {\nonterminal{Expr}}  \\
 & {\delimit}  &{\nonterminal{Expr1}} {\terminal{:}} {\nonterminal{Expr}}  \\
 & {\delimit}  &{\nonterminal{Expr1}}  \\
\end{tabular}\\

\begin{tabular}{lll}
{\nonterminal{ListLetDef}} & {\arrow}  &{\nonterminal{LetDef}}  \\
 & {\delimit}  &{\nonterminal{LetDef}} {\terminal{;}} {\nonterminal{ListLetDef}}  \\
\end{tabular}\\

\begin{tabular}{lll}
{\nonterminal{LetDef}} & {\arrow}  &{\nonterminal{LIdent}} {\nonterminal{ListArgDef}} {\terminal{:}} {\nonterminal{FreeTypeDef}} {\terminal{{$=$}}} {\nonterminal{Expr}}  \\
 & {\delimit}  &{\nonterminal{LIdent}} {\nonterminal{ListArgDef}} {\terminal{{$=$}}} {\nonterminal{Expr}}  \\
\end{tabular}\\

\begin{tabular}{lll}
{\nonterminal{ListMatchClause}} & {\arrow}  &{\nonterminal{MatchClause}}  \\
 & {\delimit}  &{\nonterminal{MatchClause}} {\terminal{;}} {\nonterminal{ListMatchClause}}  \\
\end{tabular}\\

\begin{tabular}{lll}
{\nonterminal{MatchClause}} & {\arrow}  &{\nonterminal{Expr}} {\terminal{{$-$}{$>$}}} {\nonterminal{Expr}}  \\
\end{tabular}\\

\begin{tabular}{lll}
{\nonterminal{Expr6}} & {\arrow}  &{\terminal{(}} {\terminal{$\backslash$}} {\nonterminal{ListArgDef}} {\terminal{:}} {\nonterminal{TypeDef}} {\terminal{{$-$}{$>$}}} {\nonterminal{Expr}} {\terminal{)}}  \\
 & {\delimit}  &{\terminal{(}} {\terminal{$\backslash$}} {\nonterminal{ListArgDef}} {\terminal{{$-$}{$>$}}} {\nonterminal{Expr}} {\terminal{)}}  \\
 & {\delimit}  &{\terminal{[}} {\nonterminal{ListListElem}} {\terminal{]}}  \\
 & {\delimit}  &{\terminal{[]}}  \\
 & {\delimit}  &{\terminal{[}} {\nonterminal{Integer}} {\terminal{..}} {\nonterminal{Integer}} {\terminal{]}}  \\
 & {\delimit}  &{\nonterminal{Boolean}}  \\
 & {\delimit}  &{\terminal{this}}  \\
 & {\delimit}  &{\terminal{super}}  \\
 & {\delimit}  &{\nonterminal{LIdent}}  \\
 & {\delimit}  &{\nonterminal{UIdent}}  \\
 & {\delimit}  &{\nonterminal{MFun}}  \\
 & {\delimit}  &{\terminal{(}} {\nonterminal{Operator}} {\terminal{)}}  \\
 & {\delimit}  &{\nonterminal{Integer}}  \\
 & {\delimit}  &{\nonterminal{Double}}  \\
 & {\delimit}  &{\terminal{'}} {\nonterminal{Char}} {\terminal{'}}  \\
 & {\delimit}  &{\nonterminal{String}}  \\
 & {\delimit}  &{\terminal{\_}}  \\
 & {\delimit}  &{\terminal{(}} {\nonterminal{Expr}} {\terminal{)}}  \\
\end{tabular}\\

\begin{tabular}{lll}
{\nonterminal{ListElem}} & {\arrow}  &{\nonterminal{Expr}}  \\
\end{tabular}\\

\begin{tabular}{lll}
{\nonterminal{ListListElem}} & {\arrow}  &{\nonterminal{ListElem}}  \\
 & {\delimit}  &{\nonterminal{ListElem}} {\terminal{,}} {\nonterminal{ListListElem}}  \\
\end{tabular}\\

\begin{tabular}{lll}
{\nonterminal{Expr5}} & {\arrow}  &{\terminal{{$-$}}} {\nonterminal{Expr6}}  \\
 & {\delimit}  &{\nonterminal{Expr5}} {\nonterminal{Expr6}}  \\
 & {\delimit}  &{\nonterminal{Expr6}}  \\
\end{tabular}\\

\begin{tabular}{lll}
{\nonterminal{Expr1}} & {\arrow}  &{\nonterminal{Expr1}} {\nonterminal{Op}} {\nonterminal{Expr2}}  \\
 & {\delimit}  &{\nonterminal{Expr1}} {\terminal{{$=$}{$=$}}} {\nonterminal{Expr2}}  \\
 & {\delimit}  &{\nonterminal{Expr1}} {\terminal{/{$=$}}} {\nonterminal{Expr2}}  \\
 & {\delimit}  &{\nonterminal{Expr2}} {\terminal{mod}} {\nonterminal{Expr2}}  \\
 & {\delimit}  &{\terminal{not}} {\nonterminal{Expr2}}  \\
 & {\delimit}  &{\nonterminal{Expr2}} {\terminal{{$|$}{$|$}}} {\nonterminal{Expr2}}  \\
 & {\delimit}  &{\nonterminal{Expr2}} {\terminal{\&\&}} {\nonterminal{Expr2}}  \\
 & {\delimit}  &{\nonterminal{Expr2}} {\terminal{{$<$}}} {\nonterminal{Expr2}}  \\
 & {\delimit}  &{\nonterminal{Expr2}} {\terminal{{$>$}}} {\nonterminal{Expr2}}  \\
 & {\delimit}  &{\nonterminal{Expr2}} {\terminal{{$<$}{$=$}}} {\nonterminal{Expr2}}  \\
 & {\delimit}  &{\nonterminal{Expr2}} {\terminal{{$>$}{$=$}}} {\nonterminal{Expr2}}  \\
 & {\delimit}  &{\nonterminal{Expr2}}  \\
\end{tabular}\\

\begin{tabular}{lll}
{\nonterminal{Expr2}} & {\arrow}  &{\nonterminal{Expr2}} {\terminal{{$+$}}} {\nonterminal{Expr3}}  \\
 & {\delimit}  &{\nonterminal{Expr2}} {\terminal{{$-$}}} {\nonterminal{Expr3}}  \\
 & {\delimit}  &{\nonterminal{Expr3}}  \\
\end{tabular}\\

\begin{tabular}{lll}
{\nonterminal{Expr3}} & {\arrow}  &{\nonterminal{Expr3}} {\terminal{*}} {\nonterminal{Expr4}}  \\
 & {\delimit}  &{\nonterminal{Expr3}} {\terminal{/}} {\nonterminal{Expr4}}  \\
 & {\delimit}  &{\nonterminal{Expr4}}  \\
\end{tabular}\\

\begin{tabular}{lll}
{\nonterminal{Expr4}} & {\arrow}  &{\nonterminal{Expr5}} {\terminal{{\textasciicircum}}} {\nonterminal{Expr4}}  \\
 & {\delimit}  &{\nonterminal{Expr5}}  \\
\end{tabular}\\

\begin{tabular}{lll}
{\nonterminal{Boolean}} & {\arrow}  &{\terminal{true}}  \\
 & {\delimit}  &{\terminal{false}}  \\
\end{tabular}\\



\end{document}

